# roller.properties
#
# This file is for meant for Roller deployment properties
# Any properties that don't change at runtime are defined here
#
# You can override the values in this file in a couple ways ..
#   1. define a roller-custom.properties file and place it somewhere
#       at the root of one of your classpath locations.
#       for example:
#           $TOMCAT_HOME/common/classes
#           $ROLLER_LOCATION/WEB-INF/classes
#
#   2. specify a custom properties file via jvm option
#       example:
#           roller.custom.config=/path/to/properties/file
#
#   **NOTE: if you run multiple instances of roller on the same server
#           then you should beware of the fact that the override options above
#           may affect *all* of you running instances.  if you want to do
#           custom overrides for each instance then you must do it by
#           placing a roller-custom.properties file at WEB-INF/classes/ in
#           each of you roller installations.
#
# properties in this file are accessed like this ...
#    RollerConfig.getProperty("propname");

#----------------------------------

# user management settings

users.registration.enabled=true
groupblogging.enabled=true

#----------------------------------

# upload settings
uploads.dir=${user.home}/roller_data/uploads
uploads.url=/resources

#----------------------------------

# search index settings
search.index.dir=${user.home}/roller_data/search-index

#----------------------------------

# cache settings, remember ... times are in milliseconds

# number of RSS feeds to cache  (and timeout)
cache.filter.rss.size=100
cache.filter.rss.timeout=3600

# number of if-modified dates to cache (and timeout)
cache.filter.ifmodified.size=100
cache.filter.ifmodified.timeout=1800

# number of blog pages to cache (and timeout)
cache.filter.page.size=100
cache.filter.page.timeout=3600

#----------------------------------

# secure login configs
securelogin.enabled=false

# these are only used if secure login is enabled
securelogin.http.port=80
securelogin.https.port=443
#securelogin.https.headername=X-SSL
#securelogin.https.headervalue=

# password security settings
passwds.encryption.enabled=false
passwds.encryption.algorithm=SHA

#----------------------------------

# enabled plugins ... remember, order does matter!!

# these are plugins available for a weblog
plugins.page=\
org.roller.presentation.velocity.plugins.topictag.TopicTagPlugin \
,org.roller.presentation.velocity.plugins.textile.TextilePlugin \
,org.roller.presentation.velocity.plugins.acronyms.AcronymsPlugin \
,org.roller.presentation.velocity.plugins.bookmarks.BookmarkPlugin \
,org.roller.presentation.velocity.plugins.email.ObfuscateEmailPlugin \
,org.roller.presentation.velocity.plugins.smileys.SmileysPlugin \
,org.roller.presentation.velocity.plugins.readmore.ReadMorePlugin

#----------------------------------

# scheduled tasks, each is comma separated list of classes

tasks.daily=org.roller.presentation.BlacklistUpdateTask\
,org.roller.presentation.TurnoverReferersTask\

#,org.roller.presentation.planet.SyncWebsitesTask

tasks.hourly=\

#org.roller.presentation.planet.RefreshEntriesTask

#----------------------------------

# velocity settings
velocity.properties=/WEB-INF/velocity.properties
velocity.toolbox.file=/WEB-INF/toolbox.xml

# Page model implementation
velocity.pagemodel.classname=org.roller.presentation.velocity.PageModel
# Experimental page model that allows user's access to planet aggregations
#velocity.pagemodel.classname=org.roller.presentation.velocity.planet.PlanetPageModel

#----------------------------------

# persistence settings
persistence.roller.classname=org.roller.business.hibernate.HibernateRollerImpl
persistence.filemanager.classname=org.roller.business.FileManagerImpl

# authenticator settings (experimental)
authenticator.classname=org.roller.presentation.DefaultAuthenticator

#----------------------------------

# comment settings
comment.authenticator.classname=org.roller.presentation.velocity.DefaultCommentAuthenticator
comment.notification.separateOwnerMessage=false
comment.notification.hideCommenterAddresses=false

#----------------------------------

# ping settings

# The number of attempts to try to reach a ping target before refusing to requeue it for further retrials
# If absent, this defaults to 3.
pings.maxPingAttempts=3

# The interval between ping queue processing runs in minutes.  Must be between 0 and 120.
# If set to 0, ping queue processing is disabled on this server; this is for clustered environments.
# Make sure it is nonzero on one host in a cluster.  Don't use the value 0 here to disable ping functionality,
# you will instead get an infinitely growing ping queue.  See the documentation on the properties below
# to disable ping functionality if you need to.
# If absent, this defaults to 5.
pings.queueProcessingIntervalMins=5

# The set of initial common ping targets.  This is used to initialize the database if there are no common
# ping targets at startup.  Ping targets are specified as a comma-separated list, each target in the form
# {{name}{url}}.  To disable initialization of common ping targets, comment this out, or set it to the
# empty value.  Common targets can be edited in the UI; this is just used to set up some typical ones.
pings.initialCommonTargets=\
{{Technorati}{http://rpc.technorati.com/rpc/ping}}\
,{{Weblogs.com}{http://rpc.weblogs.com/RPC2}}\
,{{blo.gs}{http://ping.blo.gs/}}\
,{{java.blogs}{http://javablogs.com/xmlrpc}}\
,{{blogrolling.com}{http://rpc.blogrolling.com/pinger/}}

# This controls whether users are allowed to add custom ping targets.  Set this to false to disallow adding custom
# targets; if false, the Weblog:Custom Ping Targets menu item will not appear and associated actions will result in
# access denied messages.  Leave this false or commented for normal behavior.
# CAUTION: Setting this to true will cause the server to remove all users' existing custom targets on startup.
pings.disallowCustomTargets=false

# This controls whether the Weblog:Pings menu item and its associated actions are enabled.  Set this to false to
# disallow users from configuring autopings and doing manual pings.  If absent, this defaults to true.
# NOTE: There is a separate runtime property (configurable from the Admin:Configuration page, that can be used to
# suspend ping processing without disabling the UI.
# CAUTION: Setting this to true will cause the server to remove all users' existing autoping
# configurations on startup. Leave this false or commented for normal behavior.
pings.disablePingUsage=false

# Setting both pings.disallowCustomTarget=true and pings.disablePingUsage=true will effectively disable
# the ping functionality.

# This is used for debugging the ping mechanism in Roller.  If this is set to true,
# pings that would normally be sent will cause log messages to be sent but will
# NOT actually result in real pings being sent.  Leave this false or commented for normal behavior.
pings.logOnly=false


#----------------------------------

# misc settings

# Set to true to show the Planet tab in the Roller menu (only admins will see it)
planet.aggregator.enabled=false

loginfilter.rememberme.enabled=true
breadcrumbs.stacksize=3
debug.memory.enabled=false

# settings for the rss aggregator (not related to planet stuff)
aggregator.enabled=true
aggregator.cache.enabled=true
aggregator.cache.timeout=14400

#---------------------------------
# settings for various plugins

# Optional site-wide customization settings for the TopicTag plugin.
# n.b. these default settings match the coded default values that would be applied if these were omitted.
org.roller.presentation.velocity.plugins.topictag.TopicTagPlugin.defaultTopicBookmarkName=Default Topic Site
org.roller.presentation.velocity.plugins.topictag.TopicTagPlugin.defaultTopicSite=http://www.technorati.com/tag
org.roller.presentation.velocity.plugins.topictag.TopicTagPlugin.tagRegexWithBookmark=topic:\\{(.*?)\\}\\[(.*?)\\]
org.roller.presentation.velocity.plugins.topictag.TopicTagPlugin.tagRegexWithoutBookmark=topic:\\[(.*?)\\]
org.roller.presentation.velocity.plugins.topictag.TopicTagPlugin.linkFormatString=<a rel=\"tag\" href=\"{0}{1}\">{2}</a>
