<!--
Builds standalone Roller demo with Tomcat, Derby and integrated JSPWiki.
Makes the following assumptions:
   * Roller has been built to ${roller.srcdir}/build/webapp
   * Roller tests have been built into ${roller.srcdir}/build/tests
   * Tomcat and JSPWiki have been downloaded:
     - Tomcat gzipped tar file in in ./components directory
     - JSPWiki zip file in ./components directory
   * The ant.properties specifies names of Tomcat and JSPWiki download files
   * The Hibernate configuration file in ./tomcat is up-to-date
-->
<project name="roller_demo" default="roller_demo">

<property file="ant.properties" />
<available file="${jspwiki.fileName}" property="jspwikiPresent" value="true" />
<available file="${tomcat.fileName}" property="tomcatPresent" value="true" />
<fail unless="tomcatPresent">Tomcat is not available here [${tomcat.fileName}]</fail>


<target name="roller_demo" depends="create_bundle" ></target>


<target name="unpack-tomcat" description="Unpack Tomcat, build plugins">

    <!-- untar Tomcat, put it in ./build/${release.fileName} -->
    <untar src="${tomcat.fileName}" dest="./build" compression="gzip" />
    <rename src="./build/${tomcat.baseName}" dest="./build/${release.fileName}" />

    <!-- Build our start-datbase lifecycle plugin for Tomcat -->
    <mkdir dir="./build/classes" />
    <javac debug="${build.debug}" srcdir="./src" destdir="./build/classes" excludes="org/apache/roller/jspwiki/**">
        <classpath>
            <fileset dir="./build/roller-demo/server/lib">
                <include name="catalina.jar" />
            </fileset>
            <fileset dir="../../tools/buildtime">
                <include name="derby.jar" />
                <include name="derbyclient.jar" />
                <include name="derbynet.jar" />
            </fileset>
        </classpath>
    </javac>   	
    <jar destfile="./build/roller-derby.jar" 
        basedir="./build/classes" 
        excludes="org/apache/roller/jspwiki/**" />

    <!-- Copy start-datbase plugin into Tomcat -->
    <copy file="./build/roller-derby.jar" 
         todir="./build/${release.fileName}/server/lib" />   
         
    <copy file="${roller.srcdir}/tools/buildtime/derbyclient.jar" 
         todir="./build/${release.fileName}/common/lib" />

    <copy file="${roller.srcdir}/tools/buildtime/derby.jar" 
         todir="./build/${release.fileName}/server/lib" />   
    <copy file="${roller.srcdir}/tools/buildtime/derbynet.jar" 
         todir="./build/${release.fileName}/server/lib" />   

</target>


<target name="unpack-jspwiki" if="jspwikiPresent" depends="unpack-tomcat" description="Unpack JSPWiki, build plugins">

    <!-- unzip JSPWiki, unjar its WAR into ./build/${release.fileName}/webapps -->
    <mkdir  dir="./build/wiki" />
    <unzip  src="${jspwiki.fileName}" dest="./build" />
    <unjar  src="./build/JSPWiki/JSPWiki.war" dest="./build/wiki" />

    <move todir="./build/${release.fileName}/webapps">
       <fileset dir="./build" includes="wiki/**" />
    </move>

    <mkdir dir="./build/classes" />
    <javac debug="${build.debug}" srcdir="./src" destdir="./build/classes" excludes="org/apache/roller/tomcat/**">
        <classpath>
            <fileset dir="./build/${release.fileName}/webapps/wiki/WEB-INF/lib">
                <include name="JSPWiki.jar" />
            </fileset>
        </classpath>
    </javac>   	
    <jar destfile="./build/${release.fileName}/webapps/wiki/WEB-INF/lib/roller-jspwiki.jar"
        basedir="./build/classes" 
        includes="org/apache/roller/jspwiki/**" />

</target>


<target name="create_bundle" depends="unpack-jspwiki"
   description="Copy in Tomcat, JSPWiki, Roller, and plugin jars">
   
   <!-- Copy Roller from its build directory -->       
   <mkdir dir="./build/${release.fileName}/webapps/roller" />
   <copy todir="./build/${release.fileName}/webapps/roller" >
       <fileset dir="${roller.srcdir}/build/webapp" includes="**/**" />
   </copy>

   <mkdir dir="./build/${release.fileName}/webapps/roller/docs" />
   <copy todir="./build/${release.fileName}/webapps/roller/docs" >
       <fileset dir="${roller.srcdir}/docs/" includes="**/*guide/**" />
   </copy>
   	      
   <!-- Copy mail and activation jars from Roller -->
   <copy file="${roller.srcdir}/tools/buildtime/mail.jar" 
        todir="./build/${release.fileName}/common/lib" />
   <copy file="${roller.srcdir}/tools/buildtime/activation.jar" 
        todir="./build/${release.fileName}/common/lib" />
	
   <!-- Copy copy-over files for Tomcat -->
   <copy todir="./build/${release.fileName}" overwrite="true">
       <fileset dir="./tomcat" includes="**/**" />
   </copy>
   
   <!-- Copy copy-over files for JSPWiki -->
   <copy todir="./build/${release.fileName}/webapps/wiki" overwrite="true">
       <fileset dir="./jspwiki" includes="**/**" />
   </copy>
	
   <!-- Copy custom copy-over files -->        
   <copy todir="./build/${release.fileName}" overwrite="true" failonerror="false">
       <fileset dir="./custom" includes="**/**" />
   </copy>
        
   <chmod perm="+x">
       <fileset dir="./build/${release.fileName}/bin" includes="*.sh" />
   </chmod>
   
   <mkdir dir="./dist" />
   <tar basedir="./build" destfile="./build/${release.fileName}.tar" includes="${release.fileName}/**" />
   <gzip zipfile="./dist/${release.fileName}.tar.gz" src="./build/${release.fileName}.tar"/>
   <delete file="./build/${release.fileName}.tar" />      
   <zip basedir="./build" destfile="./dist/${release.fileName}.zip" includes="${release.fileName}/**" />      
    
</target>


<target name="clean">
    <delete dir="build" />
</target>


</project>




