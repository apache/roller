<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  The ASF licenses this file to You
  under the Apache License, Version 2.0 (the "License"); you may not
  use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.  For additional information regarding
  copyright in this work, please see the NOTICE file in the top level
  directory of this distribution.
-->
<!DOCTYPE project [
    <!ENTITY custom-web SYSTEM "custom/custom-web.xmlf">
]>
<project name="planetroller" default="stage-webapp" basedir=".">
    
    <description>Builds, tests, and runs the project planetroller.</description>   

    <property file="./ant.properties" />
    
    <!-- core properties -->
    <property name="ro.build"            value="${basedir}/build" />
    <property name="ro.src"              value="${basedir}/src" />
    <property name="ro.tools"            value="${basedir}/../../tools" />
    <property name="ro.test"             value="${basedir}/test" />
    <property name="ro.web"              value="${basedir}/web" />
    
    <!-- build properties -->
    <property name="build.compile"                  value="${ro.build}/compile"/>
    <property name="build.compile.classes"          value="${build.compile}/classes"/>
    <property name="build.compile.test"             value="${build.compile}/test"/>
    <property name="build.lib"           value="${ro.build}/lib"/>
    <property name="build.webapp"        value="${ro.build}/webapp"/>
    <property name="build.test"          value="${ro.build}/test"/>
    <property name="build.test.reports"  value="${build.test}/reports"/>
    
    
    <fileset id="roller-jars" dir="${ro.tools}">
        <!-- needed for Hibernate -->
        <include name="hibernate-3.1/hibernate3.jar"/>
        <include name="hibernate-3.1/lib/asm.jar"/>
        <include name="hibernate-3.1/lib/asm-attrs.jar"/>
        <include name="hibernate-3.1/lib/cglib-2.1.3.jar"/>
        <include name="hibernate-3.1/lib/ehcache-1.1.jar"/>
        <include name="hibernate-3.1/lib/dom4j-1.6.1.jar"/>
        <include name="hibernate-3.1/lib/jta.jar"/>
        <include name="hibernate-3.1/lib/jdbc2_0-stdext.jar"/>
                
        <!-- needed for ROME -->
        <include name="lib/rome-0.9.jar"/>
        <include name="lib/rome-fetcher-0.9.jar"/>
        <include name="lib/jdom.jar"/>
        
        <!-- Needed for Velocity -->
        <include name="lib/velocity-1.4.jar"/>
        <include name="lib/velocity-dep-1.4.jar"/>
        
        <!-- General dependencies -->
        <include name="lib/commons-codec-1.3.jar"/>
        <include name="struts-1.2.4/lib/commons-fileupload.jar"/>
        <include name="lib/log4j-1.2.11.jar"/>
        <include name="lib/jaxen-full.jar"/>
        <include name="lib/saxpath.jar"/>
        <include name="buildtime/activation.jar"/>
        <include name="buildtime/mail.jar"/>
    </fileset>
    
    <path id="planet.path">
        <fileset refid="roller-jars" />
        
        <!-- the planet business layer code -->
        <fileset dir="../../apps/planet/build/lib">
            <include name="roller-planet.jar"/>
        </fileset>
        
        <fileset dir="${ro.tools}/buildtime/tomcat-5.0.28">
            <include name="servlet-api.jar"/>
        </fileset>
        
        <fileset dir="./lib">
            <include name="*.jar"/>  
        </fileset>
        
        <fileset dir="./lib/struts2">
            <include name="*.jar"/>
        </fileset>
    </path>
    
    <path id="xdoclet.path">
        <path refid="planet.path"/>
        <fileset dir="${ro.tools}/buildtime" includes="ejb-1.1.jar"/>
        <fileset dir="${ro.tools}/buildtime/xdoclet-1.2.3/lib" includes="*.jar"/>
    </path>
    
    <path id="test.path">
        <!-- testing jars -->
        <fileset dir="${ro.tools}/buildtime/mockrunner-0.35/lib">
            <include name="*.jar"/>
        </fileset>
        
        <pathelement location="${ro.tools}/buildtime/ant-1.6.2/ant.jar"/>
        <pathelement location="${ro.tools}/buildtime/strutstest-2.0.0.jar"/>
        <pathelement location="${ro.tools}/buildtime/junit-3.8.1.jar"/>
        <pathelement location="${ro.tools}/buildtime/derby.jar"/>
        <pathelement location="${ro.tools}/buildtime/derbyclient.jar"/>
        <pathelement location="${ro.tools}/buildtime/derbynet.jar"/>
        
        <pathelement location="${ro.tools}/lib/commons-httpclient-2.0.2.jar"/>
        
        <!-- plus normal jars -->
        <path refid="planet.path"/>

        <!-- plus already built roller planet jars -->
        <fileset dir="${build.lib}">
            <include name="*.jar" />
        </fileset>
    </path>
    
    
    <target name="clean" description="Clean (i.e. remove) build and dist dirs">
        <delete dir="${ro.build}" />
        <delete dir="${ro.dist}" />
    </target>
    
    <!-- get jars from Roller Planet project which are required for this app -->
    <target name="get-planet-jars">
        <!-- first call the "dist" target to make sure the libs are built -->
        <ant antfile="../../apps/planet/build.xml" inheritAll="false" target="dist" />
        
        <!-- now just copy them to our build.lib directory for inclusion -->
        <mkdir dir="${build.lib}"/>
        <copy todir="${build.lib}">
            <fileset dir="../../apps/planet/dist/lib" 
                     includes="roller-planet-business.jar" />
        </copy>
    </target>

    <!-- ============================================== -->
    <!-- build the code and jar it up -->
    <target name="build" depends="get-planet-jars" >
        
        <!-- compile planet classes -->
        <mkdir dir="${build.compile.classes}"/>
        <javac destdir="${build.compile.classes}"
               debug="${build.debug}" 
               source="${build.sourcelevel}"
               deprecation="${build.deprecation}">
            
            <src path="${ro.src}" />
            
            <classpath>
                <path refid="planet.path"/>
                <fileset dir="${build.lib}" includes="*.jar" />
            </classpath>
        </javac>
        
        <!-- Copy resources -->
        <copy todir="${build.compile.classes}">
            <fileset dir="${ro.src}" excludes="**/*.java, **/*.html, **/*.png" />
        </copy>
        
        <!-- Jar up the business layer -->
        <mkdir dir="${build.lib}"/>
        <jar basedir="${build.compile.classes}"
             jarfile="${build.lib}/roller-planet-web.jar"/>
        
    </target>
    
    
    <!-- ============================================== -->
    <!-- stage the full webapp -->
    <target name="stage-webapp" depends="build" description="Build Planet webapp">
        
        <mkdir dir="${build.webapp}/WEB-INF/lib" />
        <copy todir="${build.webapp}/WEB-INF/lib" flatten="true">
            <fileset dir="${build.lib}" />
            <fileset refid="roller-jars" />
            
            <!-- the planet business layer code -->
            <fileset dir="../../apps/planet/build/lib">
                <include name="roller-planet.jar"/>
            </fileset>
            
            <fileset dir="./lib">
                <include name="*.jar"/>  
            </fileset>
            
            <fileset dir="./lib/struts2">
                <include name="*.jar"/>
            </fileset>
        </copy>         

        <copy todir="${build.webapp}">
            <fileset dir="${ro.web}" includes="**/**" />
        </copy>         
        <chmod perm="+x" dir="${build.webapp}/WEB-INF/scripts" includes="*.sh" />
        
        <mkdir dir="${build.webapp}/WEB-INF/templates" />
        <copy todir="${build.webapp}/WEB-INF/templates">
            <fileset dir="./templates" includes="**/**" />
        </copy> 
        
        &custom-web;

    </target>
    
   
    <!-- Copy files locally for convenience in IDE -->
    <target name="copy-jars-for-ide">
        <mkdir dir="./lib" />
        <copy todir="./lib" flatten="true">
            <fileset refid="roller-jars" />
        </copy> 
    </target>

</project>
