<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings version="1.0" xmlns="http://java.sun.com/xml/ns/persistence/orm"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm
 orm_1_0.xsd">
    <description>Persistence Metadata for Roller</description>
    <persistence-unit-metadata>
        <persistence-unit-defaults>
            <access>PROPERTY</access>
        </persistence-unit-defaults>
    </persistence-unit-metadata>
    <package>org.apache.roller.pojos</package>
    <entity metadata-complete="true" name="CommentData" class="org.apache.roller.pojos.CommentData">
        <table name="roller_comment"/>
        <named-query name="CommentData.getCountAllDistinct">
            <!-- DISTINCT is not required for this query as comments would never be duplicated in retrieved result-->
            <query>SELECT COUNT(c) FROM CommentData c</query>
        </named-query>
        <named-query name="CommentData.getCountDistinctByWebsite">
            <!-- DISTINCT is not required for this query as comments would never be duplicated in retrieved result-->
            <query>SELECT COUNT(c) FROM CommentData c WHERE c.weblogEntry.website = ?1</query>
        </named-query>
        <named-query name="CommentData.getMostCommentedWebsiteByEndDate">
            <!--
            DISTINCT is not required for this query - comments would never be duplicated in retrieved result 
            because all the navigations from c are for ManyToOne relationship.
            -->
            <query>SELECT COUNT(c), c.weblogEntry.website.id, c.weblogEntry.website.handle, c.weblogEntry.website.name
                   FROM CommentData c WHERE c.weblogEntry.pubTime &lt; ?1
                   GROUP BY c.weblogEntry.website.id, c.weblogEntry.website.handle, c.weblogEntry.website.name
            </query>
        </named-query>
        <named-query name="CommentData.getMostCommentedWebsiteByEndDate&amp;StartDate">
            <!--
            DISTINCT is not required for this query - comments would never be duplicated in retrieved result
            because all the navigations from c are for ManyToOne relationship.
            -->
            <query>SELECT COUNT(c), c.weblogEntry.website.id, c.weblogEntry.website.handle, c.weblogEntry.website.name
                   FROM CommentData c WHERE c.weblogEntry.pubTime &lt; ?1 AND c.weblogEntry.pubTime &gt; ?2
                GROUP BY c.weblogEntry.website.id, c.weblogEntry.website.handle, c.weblogEntry.website.name
            </query>
        </named-query>
        <named-query name="CommentData.getMostCommentedWeblogEntryByEndDate">
            <!--
            DISTINCT is not required for this query - comments would never be duplicated in retrieved result
            because all the navigations from c are for ManyToOne relationship.
            -->
            <query>SELECT COUNT(c), c.weblogEntry.website.handle, c.weblogEntry.anchor, c.weblogEntry.title
                   FROM CommentData c WHERE c.weblogEntry.pubTime &lt; ?1
                   GROUP BY c.weblogEntry.website.handle, c.weblogEntry.anchor, c.weblogEntry.title
            </query>
        </named-query>
        <named-query name="CommentData.getMostCommentedWeblogEntryByEndDate&amp;StartDate">
            <!--
            DISTINCT is not required for this query - comments would never be duplicated in retrieved result
            because all the navigations from c are for ManyToOne relationship.
            -->
            <query>SELECT COUNT(c), c.weblogEntry.website.handle, c.weblogEntry.anchor, c.weblogEntry.title
                   FROM CommentData c WHERE c.weblogEntry.pubTime &lt; ?1 AND c.weblogEntry.pubTime &gt; ?2
                   GROUP BY c.weblogEntry.website.handle, c.weblogEntry.anchor, c.weblogEntry.title
            </query>
        </named-query>
        <named-query name="CommentData.getMostCommentedWeblogEntryByWebsite&amp;EndDate">
            <!--
            DISTINCT is not required for this query - comments would never be duplicated in retrieved result
            because all the navigations from c are for ManyToOne relationship.
            -->
            <query>SELECT COUNT(c), c.weblogEntry.website.handle, c.weblogEntry.anchor, c.weblogEntry.title
                   FROM CommentData c WHERE c.weblogEntry.website = ?1 AND c.weblogEntry.pubTime &lt; ?2
                  GROUP BY c.weblogEntry.website.handle, c.weblogEntry.anchor, c.weblogEntry.title
            </query>
        </named-query>
        <named-query name="CommentData.getMostCommentedWeblogEntryByWebsite&amp;EndDate&amp;StartDate">
            <!--
            DISTINCT is not required for this query - comments would never be duplicated in retrieved result
            because all the navigations from c are for ManyToOne relationship.
            -->
            <query>SELECT COUNT(c), c.weblogEntry.website.handle, c.weblogEntry.anchor, c.weblogEntry.title
                   FROM CommentData c WHERE c.weblogEntry.website = ?1
                                        AND c.weblogEntry.pubTime &lt; ?2 AND c.weblogEntry.pubTime &gt; ?3
                  GROUP BY c.weblogEntry.website.handle, c.weblogEntry.anchor, c.weblogEntry.title
            </query>
        </named-query>
        <attributes>
            <id name="id">
                <column name="id"/>
                <generated-value strategy="TABLE" generator="ROLLER-TABLE-GENERATOR"/>
            </id>
            <basic name="name">
                <column name="name" insertable="true" updatable="true" unique="false"/>
            </basic>
            <basic name="email">
                <column name="email" insertable="true" updatable="true" unique="false"/>
            </basic>
            <basic name="url">
                <column name="url" insertable="true" updatable="true" unique="false"/>
            </basic>
            <basic name="content">
                <column name="content" insertable="true" updatable="true" unique="false"/>
            </basic>
            <basic name="postTime">
                <column name="posttime" insertable="true" updatable="true" unique="false"/>
            </basic>
            <basic name="spam">
                <column name="spam" insertable="true" updatable="true" unique="false"/>
            </basic>
            <basic name="notify">
                <column name="notify" insertable="true" updatable="true" unique="false"/>
            </basic>
            <basic name="pending">
                <column name="pending" insertable="true" updatable="true" unique="false"/>
            </basic>
            <basic name="approved">
                <column name="approved" insertable="true" updatable="true" unique="false"/>
            </basic>
            <basic name="remoteHost">
                <column name="remotehost" insertable="true" updatable="true" unique="false"/>
            </basic>
            <many-to-one name="weblogEntry" target-entity="org.apache.roller.pojos.WeblogEntryData">
                <join-column name="entryid" insertable="true" updatable="true" nullable="false"/>
            </many-to-one>
            <transient name="timestamp"/>
        </attributes>
    </entity>
</entity-mappings>
