package <XDtPackage:packageOf><XDtStrutsForm:strutsFormClass/></XDtPackage:packageOf>;

import org.roller.RollerException;
import java.util.Locale;

/**
 * <XDtI18n:getString bundle="xdoclet.modules.apache.struts.ejb.XDocletModulesApacheStrutsEjbMessages" resource="form_generated"/>
 *
 * @struts.form name="<XDtStrutsForm:strutsFormName/>"
 */
public class <XDtClass:classOf><XDtStrutsForm:strutsFormClass/></XDtClass:classOf>
    extends    <XDtClass:classTagValue tagName="struts.form" paramName="extends" default="org.apache.struts.action.ActionForm" />
    implements java.io.Serializable<XDtClass:ifHasClassTag tagName="struts.form" paramName="implements" superclasses="false">, <XDtClass:classTagValue tagName="struts.form" paramName="implements" superclasses="false"/></XDtClass:ifHasClassTag>
{
    <XDtStrutsForm:forAllFormFields>
    protected <XDtMethod:methodType/> <XDtMethod:propertyName/>;
    </XDtStrutsForm:forAllFormFields>

    /** <XDtI18n:getString bundle="xdoclet.modules.apache.struts.ejb.XDocletModulesApacheStrutsEjbMessages" 
        resource="form_empty_constructor"/> */
    public <XDtClass:classOf><XDtStrutsForm:strutsFormClass/></XDtClass:classOf>() {}

  <XDtEjbDataObj:ifIsWithDataContainer>
    /** <XDtI18n:getString bundle="xdoclet.modules.apache.struts.ejb.XDocletModulesApacheStrutsEjbMessages" 
        resource="form_dataobject_constructor"/> */
    public <XDtClass:classOf><XDtStrutsForm:strutsFormClass/></XDtClass:classOf>(<XDtEjbDataObj:dataObjectClass /> dataHolder, java.util.Locale locale) throws RollerException
    {
       copyFrom(dataHolder, locale);
    }
  </XDtEjbDataObj:ifIsWithDataContainer>

    <XDtStrutsForm:forAllFormFields>

    public <XDtMethod:methodType/> <XDtMethod:getterMethod/>()<XDtMethod:exceptionList/>
    {
        return this.<XDtMethod:propertyName/>;
    }

   /** <XDtMethod:forAllMethodTags tagName="struts.validator">
    * @struts.validator <XDtMethod:methodTagValue tagName="struts.validator"/></XDtMethod:forAllMethodTags><XDtMethod:forAllMethodTags tagName="struts.validator-args">
    * @struts.validator-args <XDtMethod:methodTagValue tagName="struts.validator-args"/></XDtMethod:forAllMethodTags><XDtMethod:forAllMethodTags tagName="struts.validator-var">
    * @struts.validator-var <XDtMethod:methodTagValue tagName="struts.validator-var"/></XDtMethod:forAllMethodTags>
    */
    public void <XDtMethod:setterMethod/>( <XDtMethod:methodType/> <XDtMethod:propertyName/> )
    {
        this.<XDtMethod:propertyName/> = <XDtMethod:propertyName/>;
    }

    </XDtStrutsForm:forAllFormFields>

  <XDtEjbDataObj:ifIsWithDataContainer>
    /**
     * Copy values from this form bean to the specified data object.
     * Only copies primitive types (Boolean, boolean, String, Integer, int, Timestamp, Date)
     */
    public void copyTo(<XDtEjbDataObj:dataObjectClass /> dataHolder, Locale locale) throws RollerException
    {
<XDtStrutsForm:forAllFormFields>
    <XDtType:ifIsOfType value="return-type" 
        type="java.lang.Boolean,boolean,java.lang.String,java.lang.Integer,int,java.sql.Timestamp,java.util.Date" 
        extent="concrete-type">
        dataHolder.<XDtMethod:setterMethod/>(this.<XDtMethod:propertyName/>);
    </XDtType:ifIsOfType>  
</XDtStrutsForm:forAllFormFields>
    }

    /**
     * Copy values from specified data object to this form bean.
     * Includes all types.
     */
    public void copyFrom(<XDtEjbDataObj:dataObjectClass /> dataHolder, Locale locale) throws RollerException
    {
<XDtStrutsForm:forAllFormFields>
    <XDtType:ifIsOfType value="return-type" 
        type="java.lang.Boolean,boolean,java.lang.String,java.lang.Integer,int,java.sql.Timestamp,java.util.Date" 
        extent="concrete-type">
        this.<XDtMethod:propertyName/> = dataHolder.<XDtMethod:getterMethod/>();
    </XDtType:ifIsOfType>  
</XDtStrutsForm:forAllFormFields>
    }

  </XDtEjbDataObj:ifIsWithDataContainer>
  
    public void doReset(
    	org.apache.struts.action.ActionMapping mapping, 
    	javax.servlet.ServletRequest request)
    {
<XDtStrutsForm:forAllFormFields>
    <XDtType:ifIsOfType value="return-type" type="boolean" extent="concrete-type">
        this.<XDtMethod:propertyName/> = false;
    </XDtType:ifIsOfType>  
    <XDtType:ifIsOfType value="return-type" type="int" extent="concrete-type">
        this.<XDtMethod:propertyName/> = 0;
    </XDtType:ifIsOfType>
    <XDtType:ifIsOfType value="return-type" 
        type="java.lang.Boolean,java.lang.String,java.lang.Integer,java.sql.Timestamp,java.util.Date" >
        this.<XDtMethod:propertyName/> = null;
    </XDtType:ifIsOfType>
</XDtStrutsForm:forAllFormFields>
    }
    
    public void reset(
    	org.apache.struts.action.ActionMapping mapping, 
    	javax.servlet.ServletRequest request)
    {
        doReset(mapping, request);
    }
    
    public void reset(
    	org.apache.struts.action.ActionMapping mapping, 
    	javax.servlet.http.HttpServletRequest request)
    {
        doReset(mapping, request);
    }
}
