buildscript {
	ext {
		springBootVersion = '2.1.12.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

// tasks: spotbugsMain, spotbugsTest, spotbugsIntegrationTest or "check" for all
plugins {
	id "com.github.spotbugs" version "1.7.1"
}

apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
// run jacoco via gradle jacocoTestReport, report in build/reports
apply plugin: 'jacoco'

group = 'org.tightblog'
version = '3.7.2'
sourceCompatibility = 11
targetCompatibility = 11
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {
	mavenCentral()
}

sourceSets {
	test {
		java {
			srcDir 'src/test/java'
			exclude '**/*IT.java'
		}
	}
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/test/java')
			include '**/*IT.java'
		}
		resources.srcDir file('src/test/resources')
	}
}

static def standardCompile(options) {
    options.compilerArgs += ["-proc:none", "-Xlint:unchecked"]
}

compileJava {
    standardCompile(options)
}

compileTestJava {
    standardCompile(options)
}

compileIntegrationTestJava {
    standardCompile(options)
}

project.ext.buildNumber = java.time.Instant.now().getEpochSecond()

def standardProcessResources(obj) {
    obj.filesMatching(['application.properties', 'application-tbcustom.properties']) {
        expand(version: version,
               buildNumber: buildNumber,
               buildDir: buildDir
        )
    }
}

processResources {
    standardProcessResources(processResources)
}

processTestResources {
    standardProcessResources(processTestResources)
}

processIntegrationTestResources {
    standardProcessResources(processIntegrationTestResources)
}

configurations {
	integrationTestCompile.extendsFrom testCompile
	integrationTestRuntime.extendsFrom testRuntime
	// using log4j2 instead of logback
	// global excludes: http://mrhaki.blogspot.com/2012/10/gradle-goodness-exclude-transitive.html
	all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

task integrationTest(type: Test) {
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	outputs.upToDateWhen { false }
	mustRunAfter test
}

check.dependsOn integrationTest

checkstyle {
	toolVersion = "8.9"
	config = resources.text.fromFile("$rootProject.projectDir/etc/buildconfig/checkstyle.xml", 'UTF-8')
	showViolations = true
	ignoreFailures = false
}

spotbugs {
	excludeFilter = file("$rootProject.projectDir/etc/buildconfig/spotbugsExcludes.xml")
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-data-jpa") {
		exclude group: "org.hibernate", module: "hibernate-entitymanager"
	}
	compile('org.eclipse.persistence:org.eclipse.persistence.jpa:2.7.4')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-starter-log4j2')
    compile('org.springframework.security:spring-security-taglibs:5.1.0.RELEASE')
	compile('org.springframework.mobile:spring-mobile-device:1.1.5.RELEASE')
	compile('org.apache.commons:commons-lang3:3.7')
	compile('org.apache.commons:commons-text:1.4')
	compile('javax.servlet:jstl:1.2')
	compile('org.apache.tiles:tiles-jsp:3.0.8')
	compile('commons-validator:commons-validator:1.6')
	compile('org.apache.lucene:lucene-analyzers-common:7.4.0')
	compile('org.apache.lucene:lucene-queryparser:7.4.0')
	compile('org.jsoup:jsoup:1.11.3')
	compile('com.github.ben-manes.caffeine:caffeine:2.6.2')
	compile('org.thymeleaf:thymeleaf-spring4:3.0.9.RELEASE')
	compile('org.jboss.aerogear:aerogear-otp-java:1.0.0')
	compile('com.atlassian.commonmark:commonmark:0.13.1')
	compile('commons-fileupload:commons-fileupload:1.3.3')

	testCompile('org.springframework.boot:spring-boot-starter-test')

	compile 'org.apache.derby:derbyclient:10.14.2.0'
	runtime 'org.apache.derby:derby:10.14.2.0'

	// PostgreSQL JDBC jar, can remove if using other databases.
	runtime('org.postgresql:postgresql')

	providedCompile('org.apache.tomcat.embed:tomcat-embed-jasper:9.0.11')
	// https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-create-a-deployable-war-file
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}
