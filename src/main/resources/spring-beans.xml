<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2016 the original author or authors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<beans:beans xmlns:security="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security.xsd
          ">
    <!-- Any of these values can be overridden and maintained outside of the WAR by placing in a separate
         tightblog-custom.xml file in the servlet container's library folder, e.g. for Tomcat its lib folder
         (same place where application-tbcustom.properties is kept.) -->

    <!-- Spring Security Configuration -->
    <security:http pattern="/images/**" security="none"/>
    <security:http pattern="/scripts/**" security="none"/>
    <security:http pattern="/styles/**" security="none"/>

    <security:http use-expressions="false" auto-config="false" access-decision-manager-ref="accessDecisionManager">
        <security:intercept-url requires-channel="https" pattern="/tb-ui/admin/**" access="ADMIN"/>
        <security:intercept-url requires-channel="https" pattern="/tb-ui/app/admin/**" access="ADMIN"/>
        <security:intercept-url requires-channel="https" pattern="/tb-ui/authoring/**" access="ADMIN,BLOGCREATOR,BLOGGER"/>
        <security:intercept-url requires-channel="https" pattern="/tb-ui/app/authoring/**" access="ADMIN,BLOGCREATOR,BLOGGER"/>
        <security:intercept-url requires-channel="https" pattern="/tb-ui/app/createWeblog" access="ADMIN,BLOGCREATOR"/>
        <security:intercept-url requires-channel="https" pattern="/tb-ui/app/login-redirect" access="ADMIN,BLOGCREATOR,BLOGGER,MISSING_MFA_SECRET"/>
        <security:intercept-url requires-channel="https" pattern="/tb-ui/app/profile" access="ADMIN,BLOGCREATOR,BLOGGER"/>
        <security:intercept-url requires-channel="https" pattern="/tb-ui/app/scanCode" access="MISSING_MFA_SECRET"/>
        <security:intercept-url requires-channel="https" pattern="/tb-ui/app/home" access="ADMIN,BLOGCREATOR,BLOGGER"/>

        <!-- Detect login redirects occurring as a result of Ajax GET calls and send a 408 (timeout) response
             code to the client instead, so the Ajax call can handle properly, see:
             https://doanduyhai.wordpress.com/2012/04/21/spring-security-part-vi-session-timeout-handling-for-ajax-calls/

             Ajax calls that trigger CSRF checking get 408s sent instead via CustomAccessDeniedHandlerImpl.
        -->
        <security:custom-filter ref="ajaxInvalidSessionRedirectFilter" after="EXCEPTION_TRANSLATION_FILTER"/>

        <security:csrf request-matcher-ref="csrfSecurityRequestMatcher" token-repository-ref="tokenRepository"/>

        <!-- Needed to allow for popups -->
        <security:headers>
            <security:frame-options policy="SAMEORIGIN"/>
            <!-- Disabled to allow some non-SSL pages & resources -->
            <security:hsts disabled="true"/>
        </security:headers>

        <security:form-login login-page="/tb-ui/app/login"
                             authentication-failure-url="/tb-ui/app/login?error=true"
                             authentication-details-source-ref="customWebAuthenticationDetailsSource"
                             login-processing-url="/tb_j_security_check"
                             authentication-success-handler-ref="customAuthenticationSuccessHandler" />

        <security:access-denied-handler ref="customAccessDeniedHandlerImpl"/>

    </security:http>

    <security:authentication-manager>
        <security:authentication-provider ref="multiFactorAuthenticationProvider"/>
    </security:authentication-manager>

    <!-- Using cookie instead of default session header for CSRF tokens as former appear easier to refresh for all app tabs -->
    <beans:bean id="tokenRepository"
                class="org.springframework.security.web.csrf.CookieCsrfTokenRepository">
        <beans:property name="cookieHttpOnly" value="false"/>
    </beans:bean>

    <beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:constructor-arg ref="roleVoter"/>
        <beans:property name="allowIfAllAbstainDecisions" value="false"/>
    </beans:bean>

    <beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">
        <beans:property name="rolePrefix" value=""/>
    </beans:bean>

</beans:beans>
