package org.roller.pojos;import java.io.Serializable;import java.util.Date;/** * This class is used to manage cookie-based authentication. * * @author Matt Raible * @version $Revision: 1.2 $ $Date: 2004/06/19 13:48:29 $ *  * @hibernate.class table="usercookie"  */public class UserCookie extends PersistentObject implements Serializable{    private String id;    private String username;    private String cookieId;    private Date dateCreated;    public UserCookie()    {        this.dateCreated = new Date();    }        public UserCookie( String id, String username, String cookieId,                       Date dateCreated )    {        this.id = id;        this.username = username;        this.cookieId = cookieId;        this.dateCreated = dateCreated;    }    public UserCookie( UserCookie otherData )    {        this.id = otherData.id;        this.username = otherData.username;        this.cookieId = otherData.cookieId;        this.dateCreated = otherData.dateCreated;    }        /**      * @ejb:persistent-field      * @hibernate.id column="id" type="string"     *  generator-class="uuid.hex" unsaved-value="null"     */    public java.lang.String getId()    {       return this.id;    }    /** @ejb:persistent-field */     public void setId( java.lang.String id )    {       this.id = id;    }             /**     * Returns the username.     * @ejb:persistent-field      * @hibernate.property column="username" not-null="true" unique="false"     * @return String     */    public String getUsername()    {        return username;    }    /**     * Sets the username.     * @ejb:persistent-field      * @param username The username to set     */    public void setUsername( String username )    {        this.username = username;    }    /**     * Returns the cookieId (a GUID).     * @ejb:persistent-field      * @hibernate.property column="cookieid" not-null="true" unique="true"     * @return String     */    public String getCookieId()    {        return cookieId;    }    /**     * Sets the cookieId.     * @ejb:persistent-field     * @param rolename The cookieId to set     */    public void setCookieId( String rolename )    {        this.cookieId = rolename;    }    /**     * @return Returns the dateCreated.     * @ejb:persistent-field      * @hibernate.property column="datecreated" not-null="true" unique="false"     */    public Date getDateCreated()    {        return dateCreated;    }    /**     * @param dateCreated The dateCreated to set.     * @ejb:persistent-field     */    public void setDateCreated( Date dateCreated )    {        this.dateCreated = dateCreated;    }    	/**	 * @see org.roller.pojos.PersistentObject#setData(org.roller.pojos.PersistentObject)	 */	public void setData(PersistentObject vo) {		UserCookie newData = (UserCookie) vo;        this.id = newData.getId();        this.username = newData.getUsername();        this.cookieId = newData.getCookieId();        this.dateCreated = newData.getDateCreated();	}}