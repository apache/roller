package org.roller.pojos;import java.io.Serializable;import java.util.Comparator;import org.roller.pojos.wrapper.WeblogEntryDataWrapper;/** * Sorts WeblogEntryData objects in reverse chronological order * (most recently published entries first).  If they happen to * have the same pubTime, then sort alphabetically by title. *  * @author lance.lavandowska */public class WeblogEntryWrapperComparator implements Comparator, Serializable{    static final long serialVersionUID = -9067148992322255150L;        public int compare(Object val1, Object val2)    throws ClassCastException    {        WeblogEntryDataWrapper entry1 = (WeblogEntryDataWrapper)val1;        WeblogEntryDataWrapper entry2 = (WeblogEntryDataWrapper)val2;        long pubTime1 = entry1.getPubTime().getTime();        long pubTime2 = entry2.getPubTime().getTime();        if (pubTime1 > pubTime2)        {            return -1;        }        else if (pubTime1 < pubTime2)        {            return 1;        }        // if pubTimes are the same, return        // results of String.compareTo() on Title        return entry1.getTitle().compareTo(entry2.getTitle());    }}