#** 
createdb.vm: Velocity template that generates vendor-specific database scripts
DON'T RUN THIS, IT'S NOT A DATABASE CREATION SCRIPT!!!
**#
-- Run this script to create the TightBlog database tables in your database.
-- *****************************************************

create table weblogger_user (
    id              varchar(48) not null primary key,
    username        varchar(48) not null,
    screenname      varchar(48) not null,
    emailaddress    varchar(255) not null,
    global_role     varchar(16) not null,
    status          varchar(20) not null,
    locale          varchar(20),
    datecreated     $db.TIMESTAMP_SQL_TYPE not null,
    lastlogin       $db.TIMESTAMP_SQL_TYPE,
    activationcode	varchar(48),
    encr_password   varchar(255)
);
alter table weblogger_user add constraint wu_username_uq unique (username);

alter table weblogger_user add constraint wu_screenname_uq unique (screenname);

create table weblog (
    id                varchar(48) not null primary key,
    name              varchar(255) not null,
    handle            varchar(255) not null,
    tagline           varchar(255),
    about             varchar(255),
    locale            varchar(20),
    timezone          varchar(50),
    visible           $db.BOOLEAN_SQL_TYPE_TRUE not null,
    theme             varchar(255) not null,
    entriesperpage    integer default 15 not null,
    editformat        varchar(20) not null,
    creatorid         varchar(48) not null,
    datecreated       $db.TIMESTAMP_SQL_TYPE not null,
    lastmodified      $db.TIMESTAMP_SQL_TYPE,
    allowcomments     varchar(20) not null,
    emailcomments     $db.BOOLEAN_SQL_TYPE_TRUE not null,
    commentdays       integer default 7 not null,
    analyticscode     $db.TEXT_SQL_TYPE,
    blacklist         $db.TEXT_SQL_TYPE,
    hitstoday	      integer default 0 not null
);
create index ws_visible_idx on weblog(visible);
alter table weblog add constraint wlog_handle_uq unique (handle);

alter table weblog add constraint wlog_creatorid_fk
    foreign key ( creatorid ) references weblogger_user( id ) ;

create table user_weblog_role (
   id              varchar(48) not null primary key,
   userid          varchar(48) not null,
   weblogid        varchar(48) not null,
   weblog_role     varchar(48) not null,
   pending         $db.BOOLEAN_SQL_TYPE_TRUE not null,
   datecreated     $db.TIMESTAMP_SQL_TYPE not null
);

alter table user_weblog_role add constraint uwr_userid_fk
    foreign key ( userid ) references weblogger_user( id ) ;

alter table user_weblog_role add constraint uwr_weblogid_fk
    foreign key ( weblogid ) references weblog( id ) ;


create table weblog_template (
    id              varchar(48) not null primary key,
    weblogid        varchar(48) not null,
    role            varchar(20) not null,
    name            varchar(255) not null,
    relative_path   varchar(255),
    description     varchar(255),
    template        $db.TEXT_SQL_TYPE not null,
    updatetime      $db.TIMESTAMP_SQL_TYPE not null
);
create index wt_name_idx on weblog_template(name);
create index wt_link_idx on weblog_template(relative_path);

alter table weblog_template add constraint wt_weblogid_fk
    foreign key ( weblogid ) references weblog( id ) ;

alter table weblog_template add constraint wt_name_uq unique (weblogid, name);

#if($db.FOREIGN_KEY_MAKES_INDEX == "false")
    create index wt_weblogid_idx on weblog_template(weblogid);
#end

create table blogroll_link (
    id               varchar(48) not null primary key,
    weblogid         varchar(48) not null,
    name             varchar(128) not null,
    url              varchar(128) not null,
    description      varchar(128),
    position         integer not null
);

alter table blogroll_link add constraint bl_weblogid_fk
    foreign key ( weblogid ) references weblog( id ) ;

alter table blogroll_link add constraint bl_name_uq unique (weblogid, name);

#if($db.FOREIGN_KEY_MAKES_INDEX == "false")
    create index bl_weblogid_idx on blogroll_link( weblogid );
#end

create table weblog_category (
    id               varchar(48) not null primary key,
    name             varchar(255) not null,
    weblogid         varchar(48) not null,
    position         integer not null
);

alter table weblog_category add constraint wc_name_uq unique (weblogid, name);

alter table weblog_category add constraint wc_weblogid_fk
    foreign key ( weblogid ) references weblog( id ) ;

#if($db.FOREIGN_KEY_MAKES_INDEX == "false")
    create index wc_weblogid_idx on weblog_category( weblogid );
#end

create table weblog_entry (
    id              varchar(48)  not null primary key,
    anchor          varchar(255)  not null,
    creatorid       varchar(48) not null,
    title           varchar(255)  not null,
    text            $db.TEXT_SQL_TYPE not null,
    pubtime         $db.TIMESTAMP_SQL_TYPE_NULL,
    updatetime      $db.TIMESTAMP_SQL_TYPE not null,
    weblogid        varchar(48)  not null,
    categoryid      varchar(48)  not null,
    editformat      varchar(20) not null,
    commentdays     integer default 7 not null,
    status          varchar(20) not null,
    summary         $db.TEXT_SQL_TYPE,
    notes           $db.TEXT_SQL_TYPE,
    search_description varchar(255),
    enclosure_url   varchar(255),
    enclosure_type  varchar(48),
    enclosure_length integer
);

alter table weblog_entry add constraint we_weblogid_fk
    foreign key ( weblogid ) references weblog( id ) ;
#if($db.FOREIGN_KEY_MAKES_INDEX == "false")
    create index we_weblogid_idx on weblog_entry( weblogid );
#end

alter table weblog_entry add constraint we_categoryid_fk
    foreign key ( categoryid ) references weblog_category( id ) ;
#if($db.FOREIGN_KEY_MAKES_INDEX == "false")
    create index we_categoryid_idx on weblog_entry( categoryid );
#end

alter table weblog_entry add constraint we_creatorid_fk
    foreign key ( creatorid ) references weblogger_user( id ) ;
#if($db.FOREIGN_KEY_MAKES_INDEX == "false")
    create index we_creator_idx on weblog_entry(creatorid);
#end

create index we_status_idx on weblog_entry(status);
create index we_combo1_idx on weblog_entry(status, pubtime, weblogid);
create index we_combo2_idx on weblog_entry(weblogid, pubtime, status);

-- weblogid available via entryid but duplicated for performance purposes
create table weblog_entry_tag (
    id              varchar(48)   not null primary key,
    weblogid        varchar(48)   not null,
    entryid         varchar(48)   not null,
    name            varchar(255)  not null
);

alter table weblog_entry_tag add constraint wtag_name_uq unique (weblogid, entryid, name);

alter table weblog_entry_tag add constraint wtag_entryid_fk
    foreign key ( entryid ) references weblog_entry( id ) ;

-- below index for single-blog tag clouds
create index wtag_tagsearch_idx on weblog_entry_tag( weblogid, name, entryid );

-- View below should work fine for most installations.  For especially large sites view
-- can be redefined to point to a data warehouse table updated via triggers or a cron job.
create view weblog_entry_tag_agg as
select weblogid, name, count(*) as total
from weblog_entry_tag
group by weblogid, name;

create table weblog_entry_comment (
    id         varchar(48) not null primary key,
    entryid    varchar(48) not null,
    status     varchar(20) not null,
    bloggerid  varchar(48),
    name       varchar(255) not null,
    email      varchar(255) not null,
    notify     $db.BOOLEAN_SQL_TYPE_FALSE not null,
    content    $db.TEXT_SQL_TYPE,
    posttime   $db.TIMESTAMP_SQL_TYPE not null,
    url        varchar(255),
    remotehost varchar(128),
    referrer   varchar(255),
    useragent  varchar(255)
);

alter table weblog_entry_comment add constraint co_entryid_fk
    foreign key ( entryid ) references weblog_entry( id ) ;

#if($db.FOREIGN_KEY_MAKES_INDEX == "false")
    create index co_entryid_idx on weblog_entry_comment( entryid );
#end

alter table weblog_entry_comment add constraint co_userid_fk
    foreign key ( bloggerid ) references weblogger_user( id ) ;

create index co_status_idx on weblog_entry_comment( status );

-- for server-wide properties that can be adjusted (in the Admin UI) during runtime
create table weblogger_properties (
    id                     varchar(48) not null primary key,
    database_version       integer not null,
    main_blog_id           varchar(48),
    registration_policy    varchar(24) default 'DISABLED' not null,
    users_create_blogs     $db.BOOLEAN_SQL_TYPE_TRUE not null,
    blog_html_policy       varchar(24) default 'RELAXED' not null,
    users_customize_themes $db.BOOLEAN_SQL_TYPE_TRUE not null,
    newsfeed_items_page    integer default 30 not null,
    default_analytics_code $db.TEXT_SQL_TYPE,
    users_override_analytics_code $db.BOOLEAN_SQL_TYPE_TRUE not null,
    comment_policy         varchar(24) default 'MUSTMODERATE' not null,
    comment_html_policy    varchar(24) default 'BASIC' not null,
    autodelete_spam        $db.BOOLEAN_SQL_TYPE_FALSE not null,
    users_comment_notifications $db.BOOLEAN_SQL_TYPE_TRUE not null,
    comment_spam_filter    $db.TEXT_SQL_TYPE,
    users_upload_media_files $db.BOOLEAN_SQL_TYPE_TRUE not null,
    allowed_file_extensions varchar(255),
    disallowed_file_extensions varchar(255) default 'exe',
    max_file_size_mb       integer default 3 not null,
    max_file_uploads_size_mb integer default 20 not null,
    last_weblog_change     $db.TIMESTAMP_SQL_TYPE
);

alter table weblogger_properties add constraint wp_weblogid_fk
    foreign key (main_blog_id) references weblog( id ) ;

-- initial row, relying on per-column defaults.
insert into weblogger_properties(id, database_version) values ('1', 200);


-- MEDIA BLOGGING

create table media_directory (
    id               varchar(48) not null primary key,
    weblogid         varchar(48) not null,
    name             varchar(255) not null
);

alter table media_directory add constraint md_weblogid_fk
    foreign key ( weblogid ) references weblog( id ) ;

create table media_file (
    id              varchar(48) not null primary key,
    directoryid     varchar(48) not null,
    name            varchar(255) not null,
    content_type    varchar(50) not null,
    alt_attr        varchar(255),
    title_attr      varchar(255),
    anchor          varchar(255),
    notes           varchar(255),
    width           integer,
    height          integer,
    size_in_bytes   integer,
    creatorid       varchar(48) not null,
    date_uploaded   $db.TIMESTAMP_SQL_TYPE not null,
    last_updated    $db.TIMESTAMP_SQL_TYPE
);

alter table media_file add constraint mf_directoryid_fk
    foreign key (directoryid) references media_directory(id) ;

alter table media_file add constraint mf_creatorid_fk
    foreign key (creatorid) references weblogger_user( id ) ;
