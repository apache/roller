<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<!-- to customize logging:
    - copy this file into the servers classpath and tweak it
    - set the log4j.configurationFile system property via roller-custom.properties or -D JVM arg -->

<!--useful for testing: monitorInterval="10" -->
<Configuration status="warn" name="Apache Roller" >
    
    <!-- folder is automatically created if needed -->
    <properties>
        <property name="logging.dir">logs</property>
        <property name="logging.pattern">%-5p %d{yyyy-MM-dd HH:mm:ss} [%t] %c{1} - %m%n</property>
    </properties>

    <Appenders>

        <!-- use as appenderRef if you like to log to console instead of files -->
        <Console name="console" target="SYSTEM_OUT">
            <PatternLayout pattern="${logging.pattern}"/>
        </Console>
        
        <RollingFile name="roller"
                     fileName="${logging.dir}/roller.log" 
                     filePattern="${logging.dir}/roller-%d{yyyy-MM-dd-HHmmss}.log.gz"
                     ignoreExceptions="false">
            <PatternLayout pattern="${logging.pattern}"/>
            <Policies>
                <OnStartupTriggeringPolicy />
                <SizeBasedTriggeringPolicy size="8 MB"/>
            </Policies>
        </RollingFile>

        <!-- if you use this log4j2 config in the server classpath.
        <RollingFile name="server"
                     fileName="${logging.dir}/server.log" 
                     filePattern="${logging.dir}/server-%d{yyyy-MM-dd-HHmmss}.log.gz"
                     ignoreExceptions="false">
            <PatternLayout pattern="${logging.pattern}"/>
            <Policies>
                <SizeBasedTriggeringPolicy size="8 MB"/>
            </Policies>
            
        </RollingFile>
        -->
        <!-- uses queue + thread for non blocking file IO -->
        <Async name="asyncRoller">
            <AppenderRef ref="roller"/>
        </Async>
        
    </Appenders>

    <Loggers>
        
        <!-- roller.log; everything not defined here will end up in server.log -->
        <Logger name="org.apache.roller"       level="info"  additivity="false"> <AppenderRef ref="asyncRoller"/> </Logger>
        <Logger name="org.apache.velocity"     level="info"  additivity="false"> <AppenderRef ref="asyncRoller"/> </Logger>
        <Logger name="org.springframework"     level="info"  additivity="false"> <AppenderRef ref="asyncRoller"/> </Logger>
        <Logger name="org.apache.struts2"      level="info"  additivity="false"> <AppenderRef ref="asyncRoller"/> </Logger>
        <Logger name="org.openid4java"         level="info"  additivity="false"> <AppenderRef ref="asyncRoller"/> </Logger>
        <Logger name="org.apache.tiles"        level="info"  additivity="false"> <AppenderRef ref="asyncRoller"/> </Logger>
        <Logger name="org.eclipse.persistence" level="info"  additivity="false"> <AppenderRef ref="asyncRoller"/> </Logger>
        <Logger name="com.opensymphony"        level="info"  additivity="false"> <AppenderRef ref="asyncRoller"/> </Logger>
        <Logger name="com.rometools"           level="info"  additivity="false"> <AppenderRef ref="asyncRoller"/> </Logger>
        <Logger name="org.webjars"             level="info"  additivity="false"> <AppenderRef ref="asyncRoller"/> </Logger>
        
        <!-- server.log catches everything that hasn't been logged yet-->
        <Root level="info">
        <!--<AppenderRef ref="server"/> -->
            <AppenderRef ref="console"/>
        </Root>
        
    </Loggers>

</Configuration>