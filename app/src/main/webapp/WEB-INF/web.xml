<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

    <display-name>TightBlog Weblogger</display-name>


    <context-param>
        <param-name>contextConfigLocation</param-name>
        <!-- Non-Spring MVC config only (app beans, security): https://stackoverflow.com/a/16458969/1207540 -->
        <param-value>classpath:spring-app.xml, classpath*:tightblog-custom.xml</param-value>
    </context-param>

    <!-- Used by fmt: tags in JSPs, defines resource bundle instead of needing fmt:setBundle tag in each JSP -->
    <context-param>
        <param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
        <param-value>ApplicationResources</param-value>
    </context-param>

    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter>
        <filter-name>MultipartFilter</filter-name>
        <filter-class>org.springframework.web.multipart.support.MultipartFilter</filter-class>
    </filter>

    <filter>
        <filter-name>persistenceSessionFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter>
        <filter-name>BootstrapFilter</filter-name>
        <filter-class>org.tightblog.ui.filters.BootstrapFilter</filter-class>
    </filter>

    <filter>
        <filter-name>requestMappingFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter>
        <filter-name>InitFilter</filter-name>
        <filter-class>org.tightblog.ui.filters.InitFilter</filter-class>
    </filter>

    <filter>
        <filter-name>CharEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>


    <!-- ******************************************
         Filter mappings - order IS important here.
         ****************************************** -->

    <!-- This filter ensures that the request encoding is set to UTF-8 before any
     other processing forces request parsing using a default encoding.
    Note: Any filters preceding this one MUST not cause request parsing. -->
    <filter-mapping>
        <filter-name>CharEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <!-- Init filter.  performs some initialization on first request -->
    <filter-mapping>
        <filter-name>InitFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>MultipartFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <!-- Spring Security filters - controls secure access to different parts of TightBlog -->
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>BootstrapFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <!-- Map everything to the PersistenceSessionFilter.
    NOTE: Any filters preceding this one MUST NOT use persistence sessions.-->
    <filter-mapping>
        <filter-name>persistenceSessionFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <!-- Request mapping, this is what allows the urls to work -->
    <filter-mapping>
        <filter-name>requestMappingFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <!-- Context Listeners -->
    <listener>
        <listener-class>org.tightblog.business.WebloggerContext</listener-class>
    </listener>
    
    <servlet>
        <servlet-name>SpringDispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <!-- Spring MVC config only: https://stackoverflow.com/a/16458969/1207540 -->
            <param-value>/WEB-INF/spring-servlet.xml</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>SpringDispatcherServlet</servlet-name>
        <url-pattern>/tb-ui/app/get-default-blog</url-pattern>
        <url-pattern>/tb-ui/authoring/rest/*</url-pattern>
        <url-pattern>/tb-ui/authoring/preview/*</url-pattern>
        <url-pattern>/tb-ui/admin/rest/*</url-pattern>
        <url-pattern>/tb-ui/app/*</url-pattern>
        <url-pattern>/tb-ui/install/*</url-pattern>
        <url-pattern>/tb-ui/rendering/page/*</url-pattern>
        <url-pattern>/tb-ui/rendering/comment/*</url-pattern>
        <url-pattern>/tb-ui/rendering/feed/*</url-pattern>
        <url-pattern>/tb-ui/rendering/mediafile/*</url-pattern>
        <url-pattern>/tb-ui/rendering/search/*</url-pattern>
        <url-pattern>/tb-ui/register/rest/*</url-pattern>
    </servlet-mapping>

    <session-config>
        <session-timeout>45</session-timeout>
        <cookie-config>
            <secure>true</secure>
            <http-only>true</http-only>
            <tracking-mode>COOKIE</tracking-mode>
        </cookie-config>
    </session-config>

    <welcome-file-list>
        <welcome-file>tb-ui/app/get-default-blog</welcome-file>
    </welcome-file-list>

    <error-page>
        <exception-type>java.lang.Exception</exception-type>
        <location>/tb-ui/errors/error.jsp</location>
    </error-page>

    <error-page>
        <error-code>403</error-code>
        <location>/tb-ui/errors/403.jsp</location>
    </error-page>

    <error-page>
        <error-code>404</error-code>
        <location>/tb-ui/errors/404.jsp</location>
    </error-page>

    <!-- jndi resources -->
    <!-- See install guide and/or webapp/META-INF/context.xml-example for JNDI Config info -->
    <!-- Uncomment below if configuring DB via JNDI instead of tightblog-custom.properties -->
    <!--resource-ref>
        <res-ref-name>jdbc/tightblogdb</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>      
        <mapped-name>jdbc/tightblog</mapped-name>
    </resource-ref-->

    <resource-ref>
        <res-ref-name>mail/Session</res-ref-name>
        <res-type>javax.mail.Session</res-type>
        <res-auth>Container</res-auth>
        <mapped-name>Session</mapped-name>
    </resource-ref>

    <!--
         Specifies the pages which must run on SSL.  Default below uses SSL
         on every page, both the blogging UI and the rendered blog entries
         that visitors read.

         Servlet container-specific SSL configuration must be done,
         see your servlet container's documentation for details.

         SSL can also be enforced via Spring config:
         http://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#ns-requires-channel
    -->
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>HTTPS resources</web-resource-name>
            <url-pattern>/*</url-pattern>
        </web-resource-collection>
        <user-data-constraint>
            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint>
    </security-constraint>

</web-app>
